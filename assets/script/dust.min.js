const Dust=(()=>{const $NAME="Dust",$DATE={_date:function(date,formatStr){var tokens=(formatStr=formatStr||"yyyy-MM-dd").match(/(\w)\1*|''|'(''|[^'])+('|$)|./g),result;return tokens?(date=new Date(date),tokens.map(substring=>{if("''"===substring)return"'";var firstCharacter=substring[0];if("'"===firstCharacter)return this._clean(substring);var formatter=this._action(firstCharacter);return formatter?formatter(date,substring):substring}).join("")):date},_action:function(format){const self=this;var formatters;return{y:function y(date,token){var signedYear=date.getFullYear(),year=signedYear>0?signedYear:1-signedYear;return self._zeros("yy"===token?year%100:year,token.length)},M:function M(date,token){var months=["January","February","March","April","May","June","July","August","September","October","November","December"],month=date.getMonth();switch(token){case"MMM":return months[month].slice(0,3);case"MMMM":return months[month];default:return self._zeros(month+1,token.length)}},d:function d(date,token){var days=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];switch(token){case"ddd":return days[date.getDay()].slice(0,3);case"dddd":return days[date.getDay()];default:return self._zeros(date.getDate(),token.length)}},a:function a(date,token){var dayPeriodEnumValue=date.getHours()/12>=1?"pm":"am";switch(token){case"a":case"aa":return dayPeriodEnumValue.toUpperCase();case"aaa":return dayPeriodEnumValue;case"aaaaa":return dayPeriodEnumValue[0];case"aaaa":default:return"am"===dayPeriodEnumValue?"a.m.":"p.m."}},h:function h(date,token){return self._zeros(date.getHours()%12||12,token.length)},H:function H(date,token){return self._zeros(date.getHours(),token.length)},m:function m(date,token){return self._zeros(date.getMinutes(),token.length)},s:function s(date,token){return self._zeros(date.getSeconds(),token.length)},S:function S(date,token){var numberOfDigits=token.length,milliseconds=date.getMilliseconds(),fractionalSeconds=Math.floor(milliseconds*Math.pow(10,numberOfDigits-3));return self._zeros(fractionalSeconds,token.length)}}[format]},_zeros:function(nbr,len){for(var sign=nbr<0?"-":"",output=Math.abs(nbr).toString();output.length<len;)output="0"+output;return sign+output},_clean:function(input){var matches=input.match(/^'([^]*?)'?$/);return matches?matches[1].replace(/''/g,"'"):input}};return class Class{static __CONT=!1;static __MEMO=[];static __REFS={};static __HELP={media:{sm:()=>window.matchMedia("("+Class.Const.medias.sm.break+")").matches,md:()=>window.matchMedia("("+Class.Const.medias.md.break+")").matches,lg:()=>window.matchMedia("("+Class.Const.medias.lg.break+")").matches,xl:()=>window.matchMedia("("+Class.Const.medias.xl.break+")").matches},capitalize:function(str){return"string"==typeof str&&str.split(/[\s]/g).map((function(w){return w[0].toUpperCase()+w.slice(1).toLowerCase()})).join(" ")||null},string:function(str){return"object"!=typeof str&&String(str)||null},number:function(num){return num&&/^[0-9.]+$/g.test(num)&&Number(num)||null},integer:function(num){return num&&/^[0-9.]+$/g.test(num)&&parseInt(num)||null},reel:function(num){return num&&/^[0-9.]+$/g.test(num)&&parseFloat(num)||null},boolean:function(bol){return!0===bol||"true"===bol||!1===bol||"false"===bol?JSON.parse(bol):null},floor:function(num){return num&&/^[0-9.]+$/g.test(num)&&Math.floor(Number(num))||null},round:function(num){return num&&/^[0-9.]+$/g.test(num)&&Math.round(Number(num))||null},ceil:function(num){return num&&/^[0-9.]+$/g.test(num)&&Math.ceil(Number(num))||null},last:function(str){return("string"==typeof str||Array.isArray(str))&&str[str.length-1]||null},trim:function(str){return"string"==typeof str&&str.trim()||null},sort:function(str){return"string"==typeof str?str.split("").sort().join(""):Array.isArray(str)?str.sort():null},join:function(arr,glu){return Array.isArray(arr)&&arr.join(glu||", ")||null},unique:function(arr){return Array.isArray(arr)&&[...new Set(arr)]||null},sum:function(arr){return Array.isArray(arr)&&arr.reduce((function(a,n){return a+n}))||null},max:function(arr){return Array.isArray(arr)&&Math.max.apply(Math,arr)||null},min:function(arr){return Array.isArray(arr)&&Math.min.apply(Math,arr)||null},isString:function(str){return"string"==typeof str},isNumber:function(num,rel){return rel?num%1!=0:"number"==typeof num},isBoolean:function(bol){return"boolean"==typeof bol},upperCase:function(str){return"string"==typeof str&&str.toUpperCase()||null},lowerCase:function(str){return"string"==typeof str&&str.toLowerCase()||null},latinCase:function(str){var _latin={"Á":"A","Ă":"A","Ắ":"A","Ặ":"A","Ằ":"A","Ẳ":"A","Ẵ":"A","Ǎ":"A","Â":"A","Ấ":"A","Ậ":"A","Ầ":"A","Ẩ":"A","Ẫ":"A","Ä":"A","Ǟ":"A","Ȧ":"A","Ǡ":"A","Ạ":"A","Ȁ":"A","À":"A","Ả":"A","Ȃ":"A","Ā":"A","Ą":"A","Å":"A","Ǻ":"A","Ḁ":"A","Ⱥ":"A","Ã":"A","Ꜳ":"AA","Æ":"AE","Ǽ":"AE","Ǣ":"AE","Ꜵ":"AO","Ꜷ":"AU","Ꜹ":"AV","Ꜻ":"AV","Ꜽ":"AY","Ḃ":"B","Ḅ":"B","Ɓ":"B","Ḇ":"B","Ƀ":"B","Ƃ":"B","Ć":"C","Č":"C","Ç":"C","Ḉ":"C","Ĉ":"C","Ċ":"C","Ƈ":"C","Ȼ":"C","Ď":"D","Ḑ":"D","Ḓ":"D","Ḋ":"D","Ḍ":"D","Ɗ":"D","Ḏ":"D","ǲ":"D","ǅ":"D","Đ":"D","Ð":"D","Ƌ":"D","Ǳ":"DZ","Ǆ":"DZ","É":"E","Ĕ":"E","Ě":"E","Ȩ":"E","Ḝ":"E","Ê":"E","Ế":"E","Ệ":"E","Ề":"E","Ể":"E","Ễ":"E","Ḙ":"E","Ë":"E","Ė":"E","Ẹ":"E","Ȅ":"E","È":"E","Ẻ":"E","Ȇ":"E","Ē":"E","Ḗ":"E","Ḕ":"E","Ę":"E","Ɇ":"E","Ẽ":"E","Ḛ":"E","Ꝫ":"ET","Ḟ":"F","Ƒ":"F","Ǵ":"G","Ğ":"G","Ǧ":"G","Ģ":"G","Ĝ":"G","Ġ":"G","Ɠ":"G","Ḡ":"G","Ǥ":"G","Ḫ":"H","Ȟ":"H","Ḩ":"H","Ĥ":"H","Ⱨ":"H","Ḧ":"H","Ḣ":"H","Ḥ":"H","Ħ":"H","Í":"I","Ĭ":"I","Ǐ":"I","Î":"I","Ï":"I","Ḯ":"I","İ":"I","Ị":"I","Ȉ":"I","Ì":"I","Ỉ":"I","Ȋ":"I","Ī":"I","Į":"I","Ɨ":"I","Ĩ":"I","Ḭ":"I","І":"I","Ꝺ":"D","Ꝼ":"F","Ᵹ":"G","Ꞃ":"R","Ꞅ":"S","Ꞇ":"T","Ꝭ":"IS","Ĵ":"J","Ɉ":"J","Ḱ":"K","Ǩ":"K","Ķ":"K","Ⱪ":"K","Ꝃ":"K","Ḳ":"K","Ƙ":"K","Ḵ":"K","Ꝁ":"K","Ꝅ":"K","Ĺ":"L","Ƚ":"L","Ľ":"L","Ļ":"L","Ḽ":"L","Ḷ":"L","Ḹ":"L","Ⱡ":"L","Ꝉ":"L","Ḻ":"L","Ŀ":"L","Ɫ":"L","ǈ":"L","Ł":"L","Ǉ":"LJ","Ḿ":"M","Ṁ":"M","Ṃ":"M","Ɱ":"M","Ń":"N","Ň":"N","Ņ":"N","Ṋ":"N","Ṅ":"N","Ṇ":"N","Ǹ":"N","Ɲ":"N","Ṉ":"N","Ƞ":"N","ǋ":"N","Ñ":"N","Ǌ":"NJ","Ó":"O","Ŏ":"O","Ǒ":"O","Ô":"O","Ố":"O","Ộ":"O","Ồ":"O","Ổ":"O","Ỗ":"O","Ö":"O","Ȫ":"O","Ȯ":"O","Ȱ":"O","Ọ":"O","Ő":"O","Ȍ":"O","Ò":"O","Ỏ":"O","Ơ":"O","Ớ":"O","Ợ":"O","Ờ":"O","Ở":"O","Ỡ":"O","Ȏ":"O","Ꝋ":"O","Ꝍ":"O","Ō":"O","Ṓ":"O","Ṑ":"O","Ɵ":"O","Ǫ":"O","Ǭ":"O","Ø":"O","Ǿ":"O","Õ":"O","Ṍ":"O","Ṏ":"O","Ȭ":"O","Ƣ":"OI","Ꝏ":"OO","Ɛ":"E","Ɔ":"O","Ȣ":"OU","Ṕ":"P","Ṗ":"P","Ꝓ":"P","Ƥ":"P","Ꝕ":"P","Ᵽ":"P","Ꝑ":"P","Ꝙ":"Q","Ꝗ":"Q","Ŕ":"R","Ř":"R","Ŗ":"R","Ṙ":"R","Ṛ":"R","Ṝ":"R","Ȑ":"R","Ȓ":"R","Ṟ":"R","Ɍ":"R","Ɽ":"R","Ꜿ":"C","Ǝ":"E","Ś":"S","Ṥ":"S","Š":"S","Ṧ":"S","Ş":"S","Ŝ":"S","Ș":"S","Ṡ":"S","Ṣ":"S","Ṩ":"S","ß":"ss","Ť":"T","Ţ":"T","Ṱ":"T","Ț":"T","Ⱦ":"T","Ṫ":"T","Ṭ":"T","Ƭ":"T","Ṯ":"T","Ʈ":"T","Ŧ":"T","Ɐ":"A","Ꞁ":"L","Ɯ":"M","Ʌ":"V","Ꜩ":"TZ","Ú":"U","Ŭ":"U","Ǔ":"U","Û":"U","Ṷ":"U","Ü":"U","Ǘ":"U","Ǚ":"U","Ǜ":"U","Ǖ":"U","Ṳ":"U","Ụ":"U","Ű":"U","Ȕ":"U","Ù":"U","Ủ":"U","Ư":"U","Ứ":"U","Ự":"U","Ừ":"U","Ử":"U","Ữ":"U","Ȗ":"U","Ū":"U","Ṻ":"U","Ų":"U","Ů":"U","Ũ":"U","Ṹ":"U","Ṵ":"U","Ꝟ":"V","Ṿ":"V","Ʋ":"V","Ṽ":"V","Ꝡ":"VY","Ẃ":"W","Ŵ":"W","Ẅ":"W","Ẇ":"W","Ẉ":"W","Ẁ":"W","Ⱳ":"W","Ẍ":"X","Ẋ":"X","Ý":"Y","Ŷ":"Y","Ÿ":"Y","Ẏ":"Y","Ỵ":"Y","Ỳ":"Y","Ƴ":"Y","Ỷ":"Y","Ỿ":"Y","Ȳ":"Y","Ɏ":"Y","Ỹ":"Y","Ї":"YI","Ź":"Z","Ž":"Z","Ẑ":"Z","Ⱬ":"Z","Ż":"Z","Ẓ":"Z","Ȥ":"Z","Ẕ":"Z","Ƶ":"Z","Þ":"TH","Ĳ":"IJ","Œ":"OE","ᴀ":"A","ᴁ":"AE","ʙ":"B","ᴃ":"B","ᴄ":"C","ᴅ":"D","ᴇ":"E","ꜰ":"F","ɢ":"G","ʛ":"G","ʜ":"H","ɪ":"I","ʁ":"R","ᴊ":"J","ᴋ":"K","ʟ":"L","ᴌ":"L","ᴍ":"M","ɴ":"N","ᴏ":"O","ɶ":"OE","ᴐ":"O","ᴕ":"OU","ᴘ":"P","ʀ":"R","ᴎ":"N","ᴙ":"R","ꜱ":"S","ᴛ":"T","ⱻ":"E","ᴚ":"R","ᴜ":"U","ᴠ":"V","ᴡ":"W","ʏ":"Y","ᴢ":"Z","á":"a","ă":"a","ắ":"a","ặ":"a","ằ":"a","ẳ":"a","ẵ":"a","ǎ":"a","â":"a","ấ":"a","ậ":"a","ầ":"a","ẩ":"a","ẫ":"a","ä":"a","ǟ":"a","ȧ":"a","ǡ":"a","ạ":"a","ȁ":"a","à":"a","ả":"a","ȃ":"a","ā":"a","ą":"a","ᶏ":"a","ẚ":"a","å":"a","ǻ":"a","ḁ":"a","ⱥ":"a","ã":"a","ꜳ":"aa","æ":"ae","ǽ":"ae","ǣ":"ae","ꜵ":"ao","ꜷ":"au","ꜹ":"av","ꜻ":"av","ꜽ":"ay","ḃ":"b","ḅ":"b","ɓ":"b","ḇ":"b","ᵬ":"b","ᶀ":"b","ƀ":"b","ƃ":"b","ɵ":"o","ć":"c","č":"c","ç":"c","ḉ":"c","ĉ":"c","ɕ":"c","ċ":"c","ƈ":"c","ȼ":"c","ď":"d","ḑ":"d","ḓ":"d","ȡ":"d","ḋ":"d","ḍ":"d","ɗ":"d","ᶑ":"d","ḏ":"d","ᵭ":"d","ᶁ":"d","đ":"d","ɖ":"d","ƌ":"d","ð":"d","ı":"i","ȷ":"j","ɟ":"j","ʄ":"j","ǳ":"dz","ǆ":"dz","é":"e","ĕ":"e","ě":"e","ȩ":"e","ḝ":"e","ê":"e","ế":"e","ệ":"e","ề":"e","ể":"e","ễ":"e","ḙ":"e","ë":"e","ė":"e","ẹ":"e","ȅ":"e","è":"e","ẻ":"e","ȇ":"e","ē":"e","ḗ":"e","ḕ":"e","ⱸ":"e","ę":"e","ᶒ":"e","ɇ":"e","ẽ":"e","ḛ":"e","ꝫ":"et","ḟ":"f","ƒ":"f","ᵮ":"f","ᶂ":"f","ǵ":"g","ğ":"g","ǧ":"g","ģ":"g","ĝ":"g","ġ":"g","ɠ":"g","ḡ":"g","ᶃ":"g","ǥ":"g","ḫ":"h","ȟ":"h","ḩ":"h","ĥ":"h","ⱨ":"h","ḧ":"h","ḣ":"h","ḥ":"h","ɦ":"h","ẖ":"h","ħ":"h","ƕ":"hv","í":"i","ĭ":"i","ǐ":"i","î":"i","ï":"i","ḯ":"i","ị":"i","ȉ":"i","ì":"i","ỉ":"i","ȋ":"i","ī":"i","į":"i","ᶖ":"i","ɨ":"i","ĩ":"i","ḭ":"i","і":"i","ꝺ":"d","ꝼ":"f","ᵹ":"g","ꞃ":"r","ꞅ":"s","ꞇ":"t","ꝭ":"is","ǰ":"j","ĵ":"j","ʝ":"j","ɉ":"j","ḱ":"k","ǩ":"k","ķ":"k","ⱪ":"k","ꝃ":"k","ḳ":"k","ƙ":"k","ḵ":"k","ᶄ":"k","ꝁ":"k","ꝅ":"k","ĺ":"l","ƚ":"l","ɬ":"l","ľ":"l","ļ":"l","ḽ":"l","ȴ":"l","ḷ":"l","ḹ":"l","ⱡ":"l","ꝉ":"l","ḻ":"l","ŀ":"l","ɫ":"l","ᶅ":"l","ɭ":"l","ł":"l","ǉ":"lj","ſ":"s","ẜ":"s","ẛ":"s","ẝ":"s","ḿ":"m","ṁ":"m","ṃ":"m","ɱ":"m","ᵯ":"m","ᶆ":"m","ń":"n","ň":"n","ņ":"n","ṋ":"n","ȵ":"n","ṅ":"n","ṇ":"n","ǹ":"n","ɲ":"n","ṉ":"n","ƞ":"n","ᵰ":"n","ᶇ":"n","ɳ":"n","ñ":"n","ǌ":"nj","ó":"o","ŏ":"o","ǒ":"o","ô":"o","ố":"o","ộ":"o","ồ":"o","ổ":"o","ỗ":"o","ö":"o","ȫ":"o","ȯ":"o","ȱ":"o","ọ":"o","ő":"o","ȍ":"o","ò":"o","ỏ":"o","ơ":"o","ớ":"o","ợ":"o","ờ":"o","ở":"o","ỡ":"o","ȏ":"o","ꝋ":"o","ꝍ":"o","ⱺ":"o","ō":"o","ṓ":"o","ṑ":"o","ǫ":"o","ǭ":"o","ø":"o","ǿ":"o","õ":"o","ṍ":"o","ṏ":"o","ȭ":"o","ƣ":"oi","ꝏ":"oo","ɛ":"e","ᶓ":"e","ɔ":"o","ᶗ":"o","ȣ":"ou","ṕ":"p","ṗ":"p","ꝓ":"p","ƥ":"p","ᵱ":"p","ᶈ":"p","ꝕ":"p","ᵽ":"p","ꝑ":"p","ꝙ":"q","ʠ":"q","ɋ":"q","ꝗ":"q","ŕ":"r","ř":"r","ŗ":"r","ṙ":"r","ṛ":"r","ṝ":"r","ȑ":"r","ɾ":"r","ᵳ":"r","ȓ":"r","ṟ":"r","ɼ":"r","ᵲ":"r","ᶉ":"r","ɍ":"r","ɽ":"r","ↄ":"c","ꜿ":"c","ɘ":"e","ɿ":"r","ś":"s","ṥ":"s","š":"s","ṧ":"s","ş":"s","ŝ":"s","ș":"s","ṡ":"s","ṣ":"s","ṩ":"s","ʂ":"s","ᵴ":"s","ᶊ":"s","ȿ":"s","ɡ":"g","ᴑ":"o","ᴓ":"o","ᴝ":"u","ť":"t","ţ":"t","ṱ":"t","ț":"t","ȶ":"t","ẗ":"t","ⱦ":"t","ṫ":"t","ṭ":"t","ƭ":"t","ṯ":"t","ᵵ":"t","ƫ":"t","ʈ":"t","ŧ":"t","ᵺ":"th","ɐ":"a","ᴂ":"ae","ǝ":"e","ᵷ":"g","ɥ":"h","ʮ":"h","ʯ":"h","ᴉ":"i","ʞ":"k","ꞁ":"l","ɯ":"m","ɰ":"m","ᴔ":"oe","ɹ":"r","ɻ":"r","ɺ":"r","ⱹ":"r","ʇ":"t","ʌ":"v","ʍ":"w","ʎ":"y","ꜩ":"tz","ú":"u","ŭ":"u","ǔ":"u","û":"u","ṷ":"u","ü":"u","ǘ":"u","ǚ":"u","ǜ":"u","ǖ":"u","ṳ":"u","ụ":"u","ű":"u","ȕ":"u","ù":"u","ủ":"u","ư":"u","ứ":"u","ự":"u","ừ":"u","ử":"u","ữ":"u","ȗ":"u","ū":"u","ṻ":"u","ų":"u","ᶙ":"u","ů":"u","ũ":"u","ṹ":"u","ṵ":"u","ᵫ":"ue","ꝸ":"um","ⱴ":"v","ꝟ":"v","ṿ":"v","ʋ":"v","ᶌ":"v","ⱱ":"v","ṽ":"v","ꝡ":"vy","ẃ":"w","ŵ":"w","ẅ":"w","ẇ":"w","ẉ":"w","ẁ":"w","ⱳ":"w","ẘ":"w","ẍ":"x","ẋ":"x","ᶍ":"x","ý":"y","ŷ":"y","ÿ":"y","ẏ":"y","ỵ":"y","ỳ":"y","ƴ":"y","ỷ":"y","ỿ":"y","ȳ":"y","ẙ":"y","ɏ":"y","ỹ":"y","ї":"yi","ź":"z","ž":"z","ẑ":"z","ʑ":"z","ⱬ":"z","ż":"z","ẓ":"z","ȥ":"z","ẕ":"z","ᵶ":"z","ᶎ":"z","ʐ":"z","ƶ":"z","ɀ":"z","þ":"th","ﬀ":"ff","ﬃ":"ffi","ﬄ":"ffl","ﬁ":"fi","ﬂ":"fl","ĳ":"ij","œ":"oe","ﬆ":"st","ₐ":"a","ₑ":"e","ᵢ":"i","ⱼ":"j","ₒ":"o","ᵣ":"r","ᵤ":"u","ᵥ":"v","ₓ":"x","Ё":"YO","Й":"I","Ц":"TS","У":"U","К":"K","Е":"E","Н":"N","Г":"G","Ґ":"G","Ш":"SH","Щ":"SCH","З":"Z","Х":"H","Ъ":"'","ё":"yo","й":"i","ц":"ts","у":"u","к":"k","е":"e","н":"n","г":"g","ґ":"g","ш":"sh","щ":"sch","з":"z","х":"h","ъ":"'","Ф":"F","Ы":"I","В":"V","А":"a","П":"P","Р":"R","О":"O","Л":"L","Д":"D","Ж":"ZH","Э":"E","ф":"f","ы":"i","в":"v","а":"a","п":"p","р":"r","о":"o","л":"l","д":"d","ж":"zh","э":"e","Я":"Ya","Ч":"CH","С":"S","М":"M","И":"I","Т":"T","Ь":"'","Б":"B","Ю":"YU","я":"ya","ч":"ch","с":"s","м":"m","и":"i","т":"t","ь":"'","б":"b","ю":"yu"};return"string"==typeof str&&str.replace(/[^A-Za-z0-9]/g,(function(c){return _latin[c]||c}))||null},startCase:function(str){return"string"==typeof str&&str.split(/[-_.\\\/\s]/g).map((function(w,i){return w[0].toUpperCase()+w.slice(1).toLowerCase()})).join(" ")||null},camelCase:function(str){return"string"==typeof str&&str.split(/[-_.\\\/\s]/g).map((function(w,i){return i?w[0].toUpperCase()+w.slice(1).toLowerCase():w.toLowerCase()})).join("")||null},kebabCase:function(str){return"string"==typeof str&&str.split(/[-_.\\\/\s]/g).map((function(w,i){return w.toLowerCase()})).join("-")||null},snakeCase:function(str){return"string"==typeof str&&str.split(/[-_.\\\/\s]/g).map((function(w,i){return w.toLowerCase()})).join("_")||null},first:function(str){return("string"==typeof str||Array.isArray(str))&&str[0]||null},clean:function(str,tar){return"string"==typeof str&&str.replace(tar,"")||null},slice:function(str,is,ie){return("string"==typeof str||Array.isArray(str))&&str.slice(is,ie)||null},shrink:function(str,lim,end){return"string"==typeof str&&str.slice(0,lim)+(end||"...")||null},size:function(str){return("string"==typeof str||Array.isArray(str))&&str.length||null},date:function(str,fom){return"string"==typeof str&&$DATE._date(new Date(str),fom)||null},split:function(str,spr,lim){return"string"==typeof str&&str.split(spr,lim||1e25)||null},replace:function(str,tar,rep){return"string"==typeof str&&str.replace(tar,rep)||null},decamel:function(str,sep){return"string"==typeof str&&str.replace(/[A-Z0-9]/g,(function(c,i){return(i?sep||" ":"")+c.toLowerCase()}))||null},reverse:function(str){return"string"==typeof str&&[...str].reverse().join("")||Array.isArray(str)&&[...str].reverse()||null},escape:function(str){return"string"==typeof str&&str.replace(/[\u0000-\u002F\u003A-\u0040\u005B-\u0060\u007B-\u00FF]/g,(function(c){return"&#"+("000"+c.charCodeAt(0)).slice(-4)+";"}))||null},padEnd:function(str,len,fil){return"string"==typeof str&&str.padEnd(len,fil||" ")||null},trimEnd:function(str){return"string"==typeof str&&str.trimEnd()||null},endWith:function(str,ser){return"string"==typeof str&&str.endsWith(ser)||null},upperEnd:function(str){return"string"==typeof str&&str.slice(0,-1)+str.slice(-1).toUpperCase()||null},lowerEnd:function(str){return"string"==typeof str&&str.slice(0,-1)+str.slice(-1).toLowerCase()||null},padStart:function(str,len,fil){return"string"==typeof str&&str.padStart(len,fil||" ")||null},trimStart:function(str){return"string"==typeof str&&str.trimStart()||null},startWith:function(str,ser){return"string"==typeof str&&str.startsWith(ser)||null},upperStart:function(str){return"string"==typeof str&&str[0].toUpperCase()+str.slice(1)||null},lowerStart:function(str){return"string"==typeof str&&str[0].toLowerCase()+str.slice(1)||null}};static __STRT=[];static __UPDT=[];get refs(){return Class.__REFS}constructor(container,style,state){window[$NAME]=Class;const self=this;this.state=state,this.style=document.querySelector(style),this.container=document.querySelector(container),Object.defineProperty(this.container,"src",{get(){return this.__src},set(value){this.innerHTML="",value&&(this.__src=value,(async()=>{var code=await fetch(this.__src);self.template=await code.text(),self.maker=void 0,self.__run()})())}}),Object.defineProperty(this.style,"src",{get(){return this.__src},set(value){this.innerHTML="",value&&(this.__src=value,(async()=>{var code=await fetch(this.__src);self.sass=await code.text(),self.__run()})())}}),this.template=this.container.querySelector("template").innerHTML,this.container.hasAttribute("src")?this.src=this.container.getAttribute("src"):(this.style&&(this.sass=this.style.textContent),this.container.innerHTML="",this.style.innerHTML="",this.exec())}__change(object,callback){const handler={get(target,property,receiver){const desc=Object.getOwnPropertyDescriptor(target,property);if(desc&&!desc.writable&&!desc.configurable)return Reflect.get(target,property,receiver);try{return new Proxy(target[property],handler)}catch(err){return Reflect.get(target,property,receiver)}},defineProperty:(target,property,descriptor)=>(callback(property,descriptor.value),Reflect.defineProperty(target,property,descriptor)),deleteProperty:(target,property)=>(callback(),Reflect.deleteProperty(target,property))};return new Proxy(object,handler)}async __run(){if(this.style){const sass=new Class.Preset(this.sass,this.state).exec("html");this.style.textContent=new Class.Sass(sass).exec()}const tree=await new Class.Preset(this.template,this.state,!0).exec();tree.children.length&&(this.props||(this.props=new Class.Maker(this.container,tree)),this.props.exec(tree),this.constructor.__CONT=!0,this.constructor.__exec("__UPDT"))}exec(){Object.keys(this.state).forEach(key=>{Class.Verify.fn(this.state[key])&&(this.state[key]=this.state[key].bind(this))}),this.state=this.__change(this.state,()=>{setTimeout(()=>{this.__run()},0)}),this.__run();const repeatOften=()=>{!0===this.constructor.__CONT?this.constructor.__exec("__STRT"):requestAnimationFrame(repeatOften)};requestAnimationFrame(repeatOften)}static Helper(name,fn){if(["loop","self",...Object.keys(Class.__HELP)].includes(name))throw new Error("reserved helper name ("+name+")");this.__HELP[name]=fn}static start(fn){this.__STRT.push(fn)}static update(fn){this.__UPDT.push(fn)}static init(fn){document.addEventListener("DOMContentLoaded",fn)}static __exec(name){const current=this[name];for(let fn of current)fn()}static Sass=class{constructor(template){this.template=template.replace(new RegExp(/url\("(.*)"\)/g),(_,s)=>`url("${encodeURIComponent(s)}")`),this.tree=[],this.imports=[],this.frames=[],this.variables=[],this.mixins=[],this.medias=[]}__object(){const node={};let match=null;for(this.template=this.template.replace(Class.Const.commentX,"");null!=(match=Class.Const.altX.exec(this.template));)if(this.__empty(match[2])){if(!this.__empty(match[3]))return node;if(!this.__empty(match[4])){const line=match[4].trim(),attr=Class.Const.lineAttrX.exec(line);if(attr){const name=attr[1].trim(),value=attr[2].trim();node[name]=value}}}else{const name=match[2].trim(),newNode=this.__object(this.template);newNode["@position"]=String(Class.Const.sasscount++),node[name]=newNode}return node}__mixin(csstree){var newtree={};return Object.keys(csstree).forEach(key=>{if("object"==typeof csstree[key])newtree[key]=this.__mixin(csstree[key]);else if("@include"===key){const names=csstree[key].split(",").map(e=>e.trim());names.forEach(name=>{const object=this.mixins.find(e=>e.name===name).properties;newtree={...newtree,...this.__mixin(object)}})}else newtree[key]=csstree[key]}),newtree}__variable(csstree){return Object.keys(csstree).forEach(key=>{"object"==typeof csstree[key]?csstree[key]=this.__variable(csstree[key]):csstree[key]=csstree[key].replace(/\$([A-za-z0-9_-]+)/g,(_,s)=>this.variables.find(e=>e.name===s).value)}),csstree}__frame(csstree){return Object.keys(csstree).forEach(key=>{"object"==typeof csstree[key]?csstree[key]=this.__frame(csstree[key]):csstree[key]=csstree[key].replace(/\@frames.([A-za-z0-9_-]+)/g,(_,s)=>this.frames.find(e=>e.name===s).unique)}),csstree}__property(csstree,parent,newtree){const properties=[];return Object.keys(csstree).forEach(key=>{if("object"==typeof csstree[key]){var _=[];const selector=key.split(",").map(e=>e.trim());for(let i=0;i<parent.length;i++)for(let j=0;j<selector.length;j++){const text=parent[i]+("&"===selector[j][0]?selector[j].substr(1):" "+selector[j]);_.push(text)}newtree.push({selector:_,properties:this.__property(csstree[key],_,newtree)})}else Class.Const.CSS_MAP.includes(key)&&Class.Const.CSS_VARS.forEach(_var=>{properties.push({name:_var+key,value:csstree[key]})}),properties.push({name:key,value:csstree[key]})}),properties}__extract(){const csstree=this.__object();Object.keys(csstree).forEach(key=>{let found=!1;"$"===key[0]?(this.variables.push({name:key.slice(1),value:csstree[key]}),found=!0):"import"===key.slice(1,7)?(this.imports.push(decodeURIComponent(csstree[key])),found=!0):"mixin"===key.slice(1,6)?(this.mixins.push({name:key.slice(6).trim(),properties:{...csstree[key]}}),found=!0):"media."===key.slice(1,7)?(this.medias.push({name:Class.Const.breaks[key.slice(7).trim()],properties:{...csstree[key]}}),found=!0):"frame"===key.slice(1,6)&&(this.frames.push({name:key.slice(6).trim(),unique:Class.__uid(10),properties:{...csstree[key]}}),found=!0),found&&delete csstree[key]}),this.tree=this.__frame(this.__variable(this.__mixin(csstree))),this.frames.forEach(frame=>{frame.properties=this.__frame(this.__variable(this.__mixin(frame.properties)))}),this.medias.forEach(media=>{media.properties=this.__frame(this.__variable(this.__mixin(media.properties)))})}__clean(tree){return(tree=tree.filter(e=>"@position"!==e.selector[0])).sort((a,b)=>{const apos=parseInt(a.properties.find(e=>"@position"===e.name).value),bpos=parseInt(b.properties.find(e=>"@position"===e.name).value);return apos-bpos}).map(e=>{var position=e.properties.find(e=>"@position"===e.name);return position=e.properties.indexOf(position),e.properties.splice(position,1),e}).filter(e=>e.properties.length)}__parse(tree){const csstree=[];return Object.keys(tree).forEach(key=>{const selector=key.split(",").map(e=>e.trim());csstree.push({selector:selector,properties:this.__property(tree[key],selector,csstree)})}),this.__clean(csstree)}__empty(str){return void 0===str||0===str.length||null===str}__string(object){var str=`${object.selector.join()}{`;return Object.keys(object.properties).forEach(key=>{const current=object.properties[key];str+=`${current.name}:${current.value};`}),str&&(str+="}")}exec(){this.__extract(),this.tree=this.__parse(this.tree),this.medias.forEach(media=>{media.properties=this.__parse(media.properties)}),this.frames.forEach(frame=>{frame.properties=this.__parse(frame.properties)});const stylesheet=[...this.imports.map(e=>`@import ${e};`)];return this.tree.forEach(obj=>{stylesheet.push(this.__string(obj))}),this.frames.forEach(obj=>{stylesheet.push(...["",...Class.Const.CSS_VARS].map(frame=>`@${frame}keyframes ${obj.unique}{${obj.properties.map(e=>this.__string(e)).join("")}}`))}),this.medias.forEach(obj=>{stylesheet.push(`@media(${obj.name}) {${obj.properties.map(e=>this.__string(e)).join("")}}`)}),stylesheet.join("")}};static Preset=class{constructor(str,data={},fetch=!1){this.template=str.replace(Class.Const.COMMENT_REG,""),this.data=data,this.fetch=fetch}__clean(str){return(str=(str=(str=(str=(str=(str=(str=str.replace(/&lt;/g,"<")).replace(/&gt;/g,">")).replace(/&quot;/g,'"')).replace(/&#39;/g,"'")).replace(/&amp;/g,"&")).replace(/\n/g,"")).replace(/\s+/g," ")).trim()}__shape(arr){return arr.map(str=>{if((str=this.__place(str)).startsWith("<js:code>"))return str.slice(9);if("#"!==str[0])return"$TXT+='{(@>_<@)}';$JSX.push("+str+");";const args=str.slice(1).split(" ").map(e=>e.trim().length&&e.trim()),act=args.shift();switch(act){case"if":return"if("+args.join(" ")+"){";case"elif":return"} else if("+args.join(" ")+"){";case"switch":return"switch("+args.join(" ")+"){";case"case":return"break;case "+args.join(" ")+":";case"default":return"break;default:";case"range":return"$RANGE("+args.join(" ")+",function($LOOP){";case"each":return"$EACH("+args[0]+",function("+args[2]+", $LOOP){";case"log":case"info":case"warn":case"error":case"debug":return"console."+act+"("+args.join(" ")+");";case"else":return"}else{";case"/each":case"/range":return"});";case"js":case"/js":return"";case"/switch":return"break;}";case"/if":return"}"}}).filter(str=>str&&str.length>0)}__place(str){return str=(str=(str=(str=(str=str.replaceAll(/(@loop)(?=(?:[^'"`]|["'`][^'"`]*["'`])*$)/g,"$LOOP")).replaceAll(/(@self)(?=(?:[^'"`]|["'`][^'"`]*["'`])*$)/g,"$SELF")).replaceAll(/(@refs)(?=(?:[^'"`]|["'`][^'"`]*["'`])*$)/g,$NAME+".__REFS")).replaceAll(/(@)(?=(?:[^'"`]|["'`][^'"`]*["'`])*$)/g,$NAME+".__HELP.")).replaceAll(/([.]+[\w\d-_]+)(?=(?:[^'"`]|["'`][^'"`]*["'`])*$)/g,e=>"['"+e.slice(1)+"']")}__parse(str){const data={txt:[],jsx:[]};var state=Class.Const.OPEN_TAG;for(str=this.__clean(str).replaceAll(Class.Const.COMMENT_REG,"");str.length;)switch(state){case Class.Const.OPEN_TAG:var index;if((index=str.indexOf(Class.Const.OPEN_TAG))>-1){var code=str.slice(0,index);["#js"].includes(data.jsx[data.jsx.length-1])?data.jsx.push("<js:code>"+code):data.txt.push(code),str=str.slice(index),state=Class.Const.CLSE_TAG}else str.length&&data.txt.push(str),str="";case Class.Const.CLSE_TAG:var index;if((index=str.indexOf(Class.Const.CLSE_TAG))>-1){index=this.__last(str,index);var code=str.slice(state.length,index).trim();data.jsx.push(code),str=str.slice(index+state.length),state=Class.Const.OPEN_TAG}else str.length&&data.jsx.push(str),str=""}return data}__last(str,index){return str[index+2]!==Class.Const.CLSE_TAG[0]?index:(index+=1,this.__last(str,index))}__token(str){var code="";const data=this.__parse(str);return data.jsx=this.__shape(data.jsx),data.txt.forEach((e,i)=>{code+="$TXT+=`"+e+"`;",code+=data.jsx[i]}),code}__bind(object){for(var fn in object)"function"==typeof object[fn]?object[fn]=object[fn].bind(this.data):this.__bind(object[fn])}__run(type){const str=this.__token(this.template);this.__bind(Class.__HELP);const res=new Function("","return function($SELF) {var $TXT = '', $JSX = [], $EACH = (obj, func) => {if (obj ===null) {return obj;}let index = -1;if (Array.isArray(obj)) {const length = obj.length;let count = 1;while (++index < length) {if (func(obj[index], {key: index,round: count,index: count - 1,}) === false) {break;}count++;}}let key = Object.keys(obj);const length = key.length;let count = 1;while (++index < length) {if (func(obj[key[index]], {key: key[index],round: count,index: count - 1,}) === false) {break;}count++;}}, $RANGE = (times, func) => {for (let i = 0; i < times; i++) {func({round: i + 1,index: i,});}}; with($SELF || {}) { try {"+str+" } catch(e) { console.error(e); }}return [$TXT.split('{(@>_<@)}'), ...$JSX];}")()(this.data);if("html"===type){const parts=res.shift();return parts.reduce((acc,part,i)=>acc+part+(res[i]||""),"")}return new Class.Jsx(...res).exec()}exec(type){return this.fetch?new Promise(async res=>{this.template=await this.__include(this.template),res(this.__run(type))}):this.__run(type)}__get(object){return this.constructor[object]}async __fetch(path){if(path="/views/"+(path=path.startsWith("/")?path.slice(1):path).replaceAll(".","/")+".dust.html",!Class.__MEMO[path]){const r=await fetch(path);Class.__MEMO[path]=200===r.status?await r.text():""}return Class.__MEMO[path]}async __include(code){code=code.replace(Class.Const.COMMENT_REG,"");const matches=[];for(var match of(code=code.replace(/{{\s*#import\s+['|"|`](.*?)['|"|`]\s*}}/g,(_,path)=>{const hold="___import__placement__code__"+Class.Const.presetcount+++"___";return matches.push({path:path,hold:hold}),hold}),matches)){var _code=await this.__fetch(match.path);code=code.replace(match.hold,this.__clean(_code)),code=await this.__include(code)}return code}};static Jsx=class{constructor(parts,...args){this.parts=parts,this.args=args}__parse(el,stack,opt){const children=[],props={};if(el.attributes)for(var i=0;i<el.attributes.length;i++){var attr=el.attributes[i];"__code__joiner__"===attr.value?(props[attr.name]="string"==typeof opt.args[opt.current]?opt.args[opt.current].trim():opt.args[opt.current],opt.current++):props[attr.name]=attr.value.replace(/__code__joiner__/g,(_,s)=>{const r=opt.args[opt.current];return opt.current++,r}).trim()}else props.nodeValue=el.textContent.replace(/__code__joiner__/g,(_,s)=>{const r=opt.args[opt.current];return opt.current++,r});[...el.childNodes].forEach(_=>{this.__parse(_,children,opt)}),stack.push(new Class.TreeNode({tag:el.tagName,props:props,children:children}))}exec(){const stack=[],code=this.parts.join("__code__joiner__"),dom=(new DOMParser).parseFromString(code,"text/html");return this.__parse(dom.body,stack,{args:this.args,current:0}),(stack[0].tag="template")&&stack[0]}};static Maker=class{constructor(container,tree){this.container=container,this.instance=void 0,this.tree=tree}__instance(fiber){const dom=fiber.tag===Class.Const.TEXT_ELEMENT?document.createTextNode(""):fiber.tag in Class.Const.SVG_TAGS?document.createElementNS("http://www.w3.org/2000/svg",fiber.tag):document.createElement(fiber.tag);dom.pocket={},this.__props(dom,{},fiber.props);const children=[];for(const child of fiber.children)children.push(this.__instance(child));for(const child of children)dom.appendChild(child.dom);return new Class.Instance({dom:dom,fiber:fiber,children:children})}__children(instance,fiber){const newChildInstances=[],count=Math.max(instance.children.length,fiber.children.length);for(let i=0;i<count;i++)(instance.children[i]||fiber.children[i])&&newChildInstances.push(this.__run(instance.dom,instance.children[i],fiber.children[i]));return newChildInstances}__props(dom,_old,_new){for(let prop in _old)prop in _new||dom.removeAttribute(prop);for(let prop in _new){if("style"===prop){Class.Verify.obj(_new[prop])?this.__style(dom,_new[prop]):dom.style=_new[prop];continue}const _=dom&&dom.tagName&&dom.tagName.toLowerCase(),is_s=_ in Class.Const.SVG_TAGS,is_o=prop.split(".").length>1,is_r="ref"===prop,is_p=prop in dom,is_e=prop.startsWith("@");if(is_e)this.__event(dom,prop,_new[prop]);else if(!is_p||is_s)if(is_o){const _=prop.split(".").reduce((a,e)=>e.length?a+`["${e}"]`:a,"");eval(`dom${_} = _new[prop]`)}else is_r?Class.__REFS[_new[prop]]?Array.isArray(Class.__REFS[_new[prop]])?Class.__REFS[_new[prop]].push(dom):Class.__REFS[_new[prop]]=[Class.__REFS[_new[prop]],dom]:Class.__REFS[_new[prop]]=dom:dom.setAttribute(prop,_new[prop]);else dom[prop]=_new[prop]}}__event(root,name,callback){const ev=name.split(":"),eventName=ev[0].slice(1);root.__handlers__=root.__handlers__||{};var isSameFunction=!1;if(root.__handlers__[eventName])for(const _ev of root.__handlers__[eventName])if(_ev.toString()===callback.toString())return void(isSameFunction=!0);isSameFunction||(root.__handlers__[eventName]=[callback],root.addEventListener(eventName,e=>{this.__break(ev,e),callback(e)}))}__style(dom,val){for(var key in val){const prop=Class.__kebab(key);var cur=val[key];Class.Verify.present(cur)&&(Class.Verify.nbr(cur)&&!(prop in Class.Const.STYLE_PROPS)&&(cur+="px"),dom.style[prop]=cur)}}__break(ev,e){ev.forEach((function(_e){switch(_e){case"prevent":e.preventDefault();case"propagation":e.stopPropagation();case"immediate":e.stopImmediatePropagation()}}))}__run(dom,instance,fiber){if(void 0===instance){const instance=this.__instance(fiber);return dom.appendChild(instance.dom),instance}if(void 0!==fiber){if(instance.fiber.tag!==fiber.tag){const newInstance=this.__instance(fiber);return"TEMPLATE"===dom.tagName&&(dom=this.container),dom.replaceChild(newInstance.dom,instance.dom),newInstance}return instance.fiber.tag===fiber.tag?(this.__props(instance.dom,instance.fiber.props,fiber.props),instance.children=this.__children(instance,fiber),instance):void 0}instance.dom.remove()}exec(tree){tree&&(this.tree=tree),Class.__REFS={},this.instance=this.__run(this.container,this.instance,this.tree);const first=this.container.children[0];"TEMPLATE"===first.tagName&&([...first.children].forEach(child=>{this.container.appendChild(child)}),first.remove())}};static Verify=class{static type=element=>Object.prototype.toString.call(element).slice(8,-1).toLowerCase();static null=element=>"null"===this.type(element);static undefined=element=>"undefined"===this.type(element);static str=element=>"string"===this.type(element);static nbr=element=>"number"===this.type(element);static obj=element=>"object"===this.type(element);static arr=element=>"array"===this.type(element);static fn=element=>"function"===this.type(element);static absent=element=>this.null(element)||this.undefined(element)||this.nbr(element)&&isNaN(element)||this.str(element)&&""===element||this.arr(element)&&0===element.length||this.obj(element)&&0===Object.keys(element).length;static present=element=>!this.absent(element)};static Instance=class{constructor(opt){this.dom=opt.dom,this.fiber=opt.fiber,this.children=opt.children}};static TreeNode=class{constructor(opt){this.tag=opt.tag&&opt.tag.toLowerCase()||"text",this.props=opt.props,this.children=opt.children}isText(){return"text"===this.tag}isSvg(){return this.tag in Dust.Maker.Const.SVG_TAGS}};static Const=class{static sasscount=0;static selX=/([^\s\;\{\}][^\;\{\}]*)\{/g;static endX=/\}/g;static lineX=/([^\;\{\}]*)\;/g;static commentX=/\/\*[\s\S]*?\*\//g;static lineAttrX=/([^\:]+):([^\;]*);/;static altX=/(\/\*[\s\S]*?\*\/)|([^\s\;\{\}][^\;\{\}]*(?=\{))|(\})|([^\;\{\}]+\;(?!\s*\*\/))/gim;static breaks={sm:"min-width:640px",md:"min-width:768px",lg:"min-width:1024px",xl:"min-width:1280px"};static CSS_VARS=["-o-","-ms-","-moz-","-webkit-"];static CSS_MAP=["align-content","align-items","align-self","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","app-region","appearance","aspect-ratio","backface-visibility","background-clip","background-composite","background-origin","background-size","border-after","border-after-color","border-after-style","border-after-width","border-before","border-before-color","border-before-style","border-before-width","border-bottom-left-radius","border-bottom-right-radius","border-end","border-end-color","border-end-style","border-end-width","border-fit","border-horizontal-spacing","border-image","border-radius","border-start","border-start-color","border-start-style","border-start-width","border-top-left-radius","border-top-right-radius","border-vertical-spacing","box-align","box-decoration-break","box-direction","box-flex","box-flex-group","box-lines","box-ordinal-group","box-orient","box-pack","box-reflect","box-shadow","box-sizing","clip-path","column-break-after","column-break-before","column-break-inside","column-count","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","font-feature-settings","font-size-delta","font-smoothing","highlight","hyphenate-character","justify-content","line-box-contain","line-break","line-clamp","locale","logical-height","logical-width","margin-after","margin-after-collapse","margin-before","margin-before-collapse","margin-bottom-collapse","margin-collapse","margin-end","margin-start","margin-top-collapse","mask","mask-box-image","mask-box-image-outset","mask-box-image-repeat","mask-box-image-slice","mask-box-image-source","mask-box-image-width","mask-clip","mask-composite","mask-image","mask-origin","mask-position","mask-position-x","mask-position-y","mask-repeat","mask-repeat-x","mask-repeat-y","mask-size","max-logical-height","max-logical-width","min-logical-height","min-logical-width","opacity","order","padding-after","padding-before","padding-end","padding-start","perspective","perspective-origin","perspective-origin-x","perspective-origin-y","print-color-adjust","rtl-ordering","ruby-position","shape-image-threshold","shape-margin","shape-outside","tap-highlight-color","text-combine","text-decorations-in-effect","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-fill-color","text-orientation","text-security","text-size-adjust","text-stroke","text-stroke-color","text-stroke-width","transform","transform-origin","transform-origin-x","transform-origin-y","transform-origin-z","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","user-drag","user-modify","user-select","writing-mode","alt","animation-trigger","backdrop-filter","color-correction","column-axis","column-fill","column-progression","cursor-visibility","dashboard-region","flow-from","flow-into","font-kerning","font-variant-ligatures","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-gap","grid-column-start","grid-gap","grid-row","grid-row-end","grid-row-gap","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hyphenate-limit-after","hyphenate-limit-before","hyphenate-limit-lines","hyphens","initial-letter","justify-items","justify-self","line-align","line-grid","line-snap","marquee","marquee-direction","marquee-increment","marquee-repetition","marquee-speed","marquee-style","mask-source-type","nbsp-mode","overflow-scrolling","region-break-after","region-break-before","region-break-inside","region-fragment","scroll-snap-coordinate","scroll-snap-destination","scroll-snap-points-x","scroll-snap-points-y","scroll-snap-type","svg-shadow","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-style","text-justify","text-underline-position","text-zoom","touch-callout","binding","border-bottom-colors","border-left-colors","border-right-colors","border-top-colors","control-character-visibility","float-edge","force-broken-image-icon","image-region","math-display","math-variant","min-font-size-ratio","orient","osx-font-smoothing","outline-radius","outline-radius-bottomleft","outline-radius-bottomright","outline-radius-topleft","outline-radius-topright","script-level","script-min-size","script-size-multiplier","stack-sizing","tab-size","top-layer","user-focus","user-input","window-dragging","window-shadow","accelerator","background-position-x","background-position-y","behavior","block-progression","content-zoom-chaining","content-zoom-limit","content-zoom-limit-max","content-zoom-limit-min","content-zoom-snap","content-zoom-snap-points","content-zoom-snap-type","content-zooming","flex-align","flex-item-align","flex-line-pack","flex-negative","flex-order","flex-pack","flex-positive","flex-preferred-size","grid-column-align","grid-column-span","grid-columns","grid-row-align","grid-row-span","grid-rows","high-contrast-adjust","hyphenate-limit-chars","hyphenate-limit-zone","ime-align","ime-mode","interpolation-mode","layout-flow","layout-grid","layout-grid-char","layout-grid-line","layout-grid-mode","layout-grid-type","overflow-style","overflow-x","overflow-y","scroll-chaining","scroll-limit","scroll-limit-x-max","scroll-limit-x-min","scroll-limit-y-max","scroll-limit-y-min","scroll-rails","scroll-snap-x","scroll-snap-y","scroll-translation","scrollbar-3dlight-color","scrollbar-arrow-color","scrollbar-base-color","scrollbar-darkshadow-color","scrollbar-face-color","scrollbar-highlight-color","scrollbar-shadow-color","scrollbar-track-color","text-autospace","text-combine-horizontal","text-kashida-space","text-overflow","touch-action","touch-select","word-break","word-wrap","wrap-flow","wrap-margin","wrap-through","zoom"];static TEXT_ELEMENT="text";static SVG_TAGS={svg:!0,animate:!0,animateMotion:!0,animateTransform:!0,circle:!0,clipPath:!0,defs:!0,desc:!0,discard:!0,ellipse:!0,feBlend:!0,feColorMatrix:!0,feComponentTransfer:!0,feComposite:!0,feConvolveMatrix:!0,feDiffuseLighting:!0,feDisplacementMap:!0,feDistantLight:!0,feDropShadow:!0,feFlood:!0,feFuncA:!0,feFuncB:!0,feFuncG:!0,feFuncR:!0,feGaussianBlur:!0,feImage:!0,feMerge:!0,feMergeNode:!0,feMorphology:!0,feOffset:!0,fePointLight:!0,feSpecularLighting:!0,feSpotLight:!0,feTile:!0,feTurbulence:!0,filter:!0,foreignObject:!0,g:!0,hatch:!0,hatchpath:!0,image:!0,line:!0,linearGradient:!0,marker:!0,mask:!0,metadata:!0,mpath:!0,path:!0,pattern:!0,polygon:!0,polyline:!0,radialGradient:!0,rect:!0,script:!0,set:!0,stop:!0,style:!0,switch:!0,symbol:!0,text:!0,textPath:!0,title:!0,tspan:!0,use:!0,view:!0,animateColor:!0,"missing-glyph":!0,font:!0,"font-face":!0,"font-face-format":!0,"font-face-name":!0,"font-face-src":!0,"font-face-uri":!0,hkern:!0,vkern:!0,solidcolor:!0,altGlyph:!0,altGlyphDef:!0,altGlyphItem:!0,glyph:!0,glyphRef:!0,tref:!0,cursor:!0};static STYLE_PROPS={"animation-iteration-count":!0,"border-image-slice":!0,"border-image-width":!0,"column-count":!0,"counter-increment":!0,"counter-reset":!0,flex:!0,"flex-grow":!0,"flex-shrink":!0,"font-size-adjust":!0,"font-weight":!0,"line-height":!0,"nav-index":!0,opacity:!0,order:!0,orphans:!0,"tab-size":!0,widows:!0,"z-index":!0,"pitch-range":!0,richness:!0,"speech-rate":!0,stress:!0,volume:!0,"lood-opacity":!0,"mask-box-outset":!0,"mask-border-outset":!0,"mask-box-width":!0,"mask-border-width":!0,"shape-image-threshold":!0};static IMPORTS_REG=/{{\s*#import\s+['|"|`](.*?)['|"|`]\s*}}/g;static COMMENT_REG=/{{!--(.*?)--}}/gms;static OPEN_TAG="{{";static CLSE_TAG="}}";static presetcount=0};static __kebab(str){return str.replace(/([a-z])([A-Z])/g,match=>match[0]+"-"+match[1]).toLowerCase()}static __uid(length){let result="";const characters="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",charactersLength=characters.length;let counter=0;for(;counter<length;)result+=characters.charAt(Math.floor(Math.random()*charactersLength)),counter+=1;return/\d/g.test(result[0])?Class.__uid(length):result}}})();